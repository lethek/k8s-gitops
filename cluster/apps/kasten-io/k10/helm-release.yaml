---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: k10
  namespace: kasten-io
spec:
  releaseName: k10
  interval: 5m
  chart:
    spec:
      chart: k10
      version: 4.5.15
      sourceRef:
        kind: HelmRepository
        name: kasten-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    eula:
      accept: true
      company: ${SECRET_DOMAIN}
      email: ${SECRET_DEFAULT_EMAIL}
    global:
      persistence:
        enabled: true
        storageClass: longhorn
        size: 1Gi
        catalog:
          size: 2Gi
        grafana:
          size: 1Gi
        jobs:
          size: 1Gi
        logging:
          size: 1Gi
        metering:
          size: 1Gi
    prometheus:
      server:
        persistentVolume:
          size: 1Gi
          storageClass: longhorn
    grafana:
      enabled: false
      global:
        persistence:
          size: 1Gi
          storageClass: longhorn
    auth:
      groupAllowList:
        - Admins
      k10AdminGroups:
        - Admins
      tokenAuth:
        enabled: true
      ldap:
        enabled: false
        restartPod: true
        insecureNoSSL: true
        insecureSkipVerifySSL: true
        dashboardURL: "https://k10.${SECRET_DOMAIN}/k10"
        host: "openldap.networking.svc.cluster.local:389"
        bindDN: "cn=admin,${LDAP_BASE_DN}"
        bindPW: "${SECRET_DEFAULT_PASSWORD}"
        userSearch:
          baseDN: "ou=People,${LDAP_BASE_DN}"
          filter: "(objectClass=person)"
          username: uid
          idAttr: uid
          emailAttr: mail
          nameAttr: cn
          preferredUsernameAttr: uid
        groupSearch:
          baseDN: "ou=Groups,${LDAP_BASE_DN}"
          filter: "(objectClass=groupOfUniqueNames)"
          nameAttr: cn
          userMatchers:
            - userAttr: dn
              groupAttr: uniqueMember
    ingress:
      create: true
      host: k10.${SECRET_DOMAIN}
      urlPath: "k10"
      annotations:
        kubernetes.io/tls-acme: "true"
        kubernetes.io/ingress.class: nginx
        hajimari.io/enable: "true"
        hajimari.io/icon: backup-restore
        hajimari.io/appName: "K10"
        hajimari.io/url: "https://k10.${SECRET_DOMAIN}/k10/"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/auth-url: "http://authelia.networking.svc.cluster.local/api/verify"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}"
      hosts:
        - k10.${SECRET_DOMAIN}
      tls:
        enabled: true
        secretName: k10-tls
